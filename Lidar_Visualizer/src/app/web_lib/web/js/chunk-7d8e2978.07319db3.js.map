{"version":3,"sources":["webpack:///./src/views/SettingsViewes/Cameras.vue?cd4c","webpack:///src/views/SettingsViewes/Cameras.vue","webpack:///./src/views/SettingsViewes/Cameras.vue?624c","webpack:///./src/views/SettingsViewes/Cameras.vue","webpack:///./node_modules/vuetify/lib/mixins/rippleable/index.js","webpack:///./src/assets/chessboard.png","webpack:///./src/components/cv-number-input.vue?e6df","webpack:///src/components/cv-number-input.vue","webpack:///./src/components/cv-number-input.vue?e011","webpack:///./src/components/cv-number-input.vue","webpack:///./node_modules/vuetify/lib/components/VCheckbox/VCheckbox.js","webpack:///./node_modules/vuetify/lib/mixins/selectable/index.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","cameraList","on","$event","handleInput","currentCameraIndex","model","value","callback","$$v","expression","cameraSettings","$set","staticStyle","sendCameraSettings","_v","stringResolutionList","resolutionIndex","squareSize","calibrationModeButton","color","checkResolution","sendCalibrationMode","_s","text","cancellationModeButton","checkCancelation","sendCalibrationFinish","$refs","calibrationFile","click","ref","snapshotAmount","_e","isAdvanced","handleData","pipeline","gain","stringFpsList","changeFps","snackbar","snack","staticRenderFns","component","VBtn","VCheckbox","VCol","VDivider","VRow","VSnackbar","extend","name","directives","ripple","props","type","Boolean","Object","default","methods","data","staticClass","push","center","assign","onChange","$listeners","module","exports","step","localValue","VTextField","indeterminate","indeterminateIcon","String","offIcon","onIcon","inputIndeterminate","computed","options","classes","call","isActive","disabled","hasError","shouldValidate","hasSuccess","hasColor","computedColor","watch","val","$nextTick","$emit","genInput","attrs$","toString","genRipple","setTextColor","validationState","dense","dark","light","computedIcon","genCheckbox","genLabel","prop","event","id","inputValue","falseValue","trueValue","multiple","label","lazyValue","isDark","appIsDark","Array","isArray","internalValue","input","isMultiple","some","item","valueComparator","undefined","e","preventDefault","isDisabled","computedId","role","domProps","checked","blur","onBlur","change","focus","onFocus","keydown","onKeydown","isFocused","length","filter","validate"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACA,EAAG,WAAW,CAACE,MAAM,CAAC,KAAO,SAAS,KAAON,EAAIO,YAAYC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIU,YAAY,gBAAgBV,EAAIW,sBAAsBC,MAAM,CAACC,MAAOb,EAAsB,mBAAEc,SAAS,SAAUC,GAAMf,EAAIW,mBAAmBI,GAAKC,WAAW,wBAAwBZ,EAAG,gBAAgB,CAACE,MAAM,CAAC,KAAO,gBAAgBM,MAAM,CAACC,MAAOb,EAAIiB,eAAkB,IAAEH,SAAS,SAAUC,GAAMf,EAAIkB,KAAKlB,EAAIiB,eAAgB,MAAOF,IAAMC,WAAW,wBAAwBZ,EAAG,MAAMA,EAAG,gBAAgB,CAACE,MAAM,CAAC,KAAO,eAAe,KAAO,KAAMM,MAAM,CAACC,MAAOb,EAAIiB,eAAmB,KAAEH,SAAS,SAAUC,GAAMf,EAAIkB,KAAKlB,EAAIiB,eAAgB,OAAQF,IAAMC,WAAW,yBAAyBZ,EAAG,MAAMA,EAAG,QAAQ,CAACe,YAAY,CAAC,aAAa,QAAQb,MAAM,CAAC,MAAQ,GAAG,MAAQ,WAAWE,GAAG,CAAC,MAAQR,EAAIoB,qBAAqB,CAACpB,EAAIqB,GAAG,qCAAqC,GAAGjB,EAAG,MAAM,CAACe,YAAY,CAAC,aAAa,SAAS,CAACf,EAAG,OAAO,CAACJ,EAAIqB,GAAG,oBAAoBjB,EAAG,YAAY,CAACe,YAAY,CAAC,gBAAgB,QAAQb,MAAM,CAAC,MAAQ,WAAWF,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACA,EAAG,WAAW,CAACE,MAAM,CAAC,KAAO,aAAa,KAAON,EAAIsB,sBAAsBV,MAAM,CAACC,MAAOb,EAAmB,gBAAEc,SAAS,SAAUC,GAAMf,EAAIuB,gBAAgBR,GAAKC,WAAW,sBAAsB,GAAGZ,EAAG,QAAQ,CAACA,EAAG,gBAAgB,CAACE,MAAM,CAAC,KAAO,oBAAoBM,MAAM,CAACC,MAAOb,EAAc,WAAEc,SAAS,SAAUC,GAAMf,EAAIwB,WAAWT,GAAKC,WAAW,iBAAiB,IAAI,GAAGZ,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACE,MAAM,CAAC,MAAQ,GAAG,MAAQN,EAAIyB,sBAAsBC,MAAM,SAAW1B,EAAI2B,iBAAiBnB,GAAG,CAAC,MAAQR,EAAI4B,sBAAsB,CAAC5B,EAAIqB,GAAG,yBAAyBrB,EAAI6B,GAAG7B,EAAIyB,sBAAsBK,MAAM,yBAAyB,GAAG1B,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACE,MAAM,CAAC,MAAQ,GAAG,MAAQN,EAAI+B,uBAAuBL,MAAM,SAAW1B,EAAIgC,kBAAkBxB,GAAG,CAAC,MAAQR,EAAIiC,wBAAwB,CAACjC,EAAIqB,GAAG,yBAAyBrB,EAAI6B,GAAG7B,EAAI+B,uBAAuBD,MAAM,yBAAyB,GAAG1B,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACE,MAAM,CAAC,MAAQ,aAAa,MAAQ,IAAIE,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIkC,MAAMC,gBAAgBC,WAAW,CAACpC,EAAIqB,GAAG,mEAAmEjB,EAAG,IAAI,CAACiC,IAAI,kBAAkBlB,YAAY,CAAC,MAAQ,QAAQ,kBAAkB,OAAO,QAAU,QAAQb,MAAM,CAAC,KAAO,EAAQ,QAA+B,SAAW,4BAA4B,IAAI,GAAIN,EAAiB,cAAEI,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACA,EAAG,OAAO,CAACJ,EAAIqB,GAAG,oBAAoBrB,EAAI6B,GAAG7B,EAAIsC,sBAAsB,GAAGtC,EAAIuC,KAAMvC,EAAiB,cAAEI,EAAG,MAAM,CAACA,EAAG,aAAa,CAACE,MAAM,CAAC,MAAQ,gBAAgB,KAAO,IAAIM,MAAM,CAACC,MAAOb,EAAc,WAAEc,SAAS,SAAUC,GAAMf,EAAIwC,WAAWzB,GAAKC,WAAW,gBAAiBhB,EAAc,WAAEI,EAAG,MAAM,CAACA,EAAG,WAAW,CAACE,MAAM,CAAC,KAAO,WAAW,IAAM,EAAE,IAAM,KAAKE,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIyC,WAAW,cAAc7B,MAAM,CAACC,MAAOb,EAAI0C,SAAiB,SAAE5B,SAAS,SAAUC,GAAMf,EAAIkB,KAAKlB,EAAI0C,SAAU,WAAY3B,IAAMC,WAAW,uBAAuBZ,EAAG,WAAW,CAACE,MAAM,CAAC,KAAO,aAAa,IAAM,EAAE,IAAM,KAAKE,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIyC,WAAW,gBAAgB7B,MAAM,CAACC,MAAOb,EAAI0C,SAAmB,WAAE5B,SAAS,SAAUC,GAAMf,EAAIkB,KAAKlB,EAAI0C,SAAU,aAAc3B,IAAMC,WAAW,0BAAiD,IAAvBhB,EAAI0C,SAASC,KAAavC,EAAG,WAAW,CAACE,MAAM,CAAC,KAAO,OAAO,IAAM,EAAE,IAAM,KAAKE,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIyC,WAAW,UAAU7B,MAAM,CAACC,MAAOb,EAAI0C,SAAa,KAAE5B,SAAS,SAAUC,GAAMf,EAAIkB,KAAKlB,EAAI0C,SAAU,OAAQ3B,IAAMC,WAAW,mBAAmBhB,EAAIuC,KAAKnC,EAAG,WAAW,CAACE,MAAM,CAAC,KAAO,MAAM,KAAON,EAAI4C,eAAepC,GAAG,CAAC,MAAQR,EAAI6C,WAAWjC,MAAM,CAACC,MAAOb,EAAI0C,SAAuB,eAAE5B,SAAS,SAAUC,GAAMf,EAAIkB,KAAKlB,EAAI0C,SAAU,iBAAkB3B,IAAMC,WAAW,8BAA8B,GAAGhB,EAAIuC,MAAM,GAAGvC,EAAIuC,MAAM,GAAGnC,EAAG,aAAa,CAACE,MAAM,CAAC,IAAM,GAAG,MAAQN,EAAI8C,SAASpB,OAAOd,MAAM,CAACC,MAAOb,EAAS,MAAEc,SAAS,SAAUC,GAAMf,EAAI+C,MAAMhC,GAAKC,WAAW,UAAU,CAACZ,EAAG,OAAO,CAACJ,EAAIqB,GAAGrB,EAAI6B,GAAG7B,EAAI8C,SAAShB,YAAY,IAC5/HkB,EAAkB,G,oCCyEtB,GACI,KAAJ,iBACI,WAAJ,CACQ,gBACA,qBACA,iBAEJ,OACI,MAAR,CACY,eAAZ,EACY,qBAAZ,EACY,sBAAZ,CACgB,KAAhB,oBACgB,MAAhB,SAEY,uBAAZ,CACgB,KAAhB,qBACgB,MAAhB,OAEY,SAAZ,CACgB,MAAhB,UACgB,KAAhB,IAEY,WAAZ,EACY,eAAZ,EACY,WAAZ,EACY,OAAZ,EACY,YAAZ,IAGI,QAAJ,CACQ,WAAR,GACY,KAAZ,iCAEQ,YACI,KAAZ,oGAEQ,qBACI,MAAZ,OACY,KAAZ,qFACgB,SAAhB,GACA,iBACwB,EAAxB,6BAKQ,sBACI,MAAZ,OACY,IAAZ,KACA,oBACA,oBACgB,GAAhB,YAEgB,GAAhB,mBACgB,EAAhB,4EACgB,EAAhB,8BACgB,EAAhB,cAEY,KAAZ,8CACgB,SAAhB,GACA,iBACA,iBAC4B,EAA5B,uCAC4B,EAA5B,+BACA,kBACgC,EAAhC,iDACgC,EAAhC,wCAG4B,EAA5B,2CAC4B,EAA5B,uBAMQ,wBACI,MAAZ,OACY,IAAZ,iCACA,KACY,EAAZ,8BACY,EAAZ,iDACA,iBACwB,EAAxB,UAC4B,MAA5B,UAC4B,KAA5B,uCACA,+BAEwB,EAAxB,UAEoB,EAApB,iBACoB,EAApB,aACoB,EAApB,iBACoB,EAApB,+CACoB,EAApB,iDACoB,EAApB,qCAEA,WACgB,EAAhB,UACoB,MAApB,QACoB,KAApB,sBAEgB,EAAhB,SACgB,EAAhB,iBACgB,EAAhB,aACgB,EAAhB,iBACgB,EAAhB,+CACgB,EAAhB,iDACgB,EAAhB,uCAII,SAAJ,CACQ,kBACI,YAAZ,0BAEQ,mBACI,OAAZ,qBAEA,sBACA,IAKQ,mBAAR,CACY,MACI,OAAhB,sCAEY,IAAZ,GACgB,KAAhB,wCAGQ,WAAR,CACY,MACI,OAAhB,8BAEY,IAAZ,GACgB,KAAhB,gCAGQ,uBAAR,CACY,MACI,IAAhB,KACgB,IAAhB,2CACoB,IAApB,kEACA,oDACwB,EAAxB,2BACwB,EAAxB,SAGgB,OAAhB,IAGQ,kBACI,IAAZ,yDACA,KACY,IAAZ,2CACgB,IAAhB,kEACA,gCACA,yCACwB,EAAxB,2BACwB,EAAxB,SAIY,OAAZ,GAEQ,gBACI,IAAZ,KACY,IAAZ,8BACgB,EAAhB,eAEY,OAAZ,GAEQ,qBAAR,CACY,MACI,IAAhB,KACgB,IAAhB,qCACoB,EAApB,uCAEgB,OAAhB,IAGQ,eAAR,CACY,MACI,OAAhB,kCAEY,IAAZ,GACgB,KAAhB,oCAGQ,WACI,OAAZ,8BC5QoQ,I,yGCOhQC,EAAY,eACd,EACAlD,EACAiD,GACA,EACA,KACA,WACA,MAIa,aAAAC,EAAiB,QAUhC,IAAkBA,EAAW,CAACC,OAAA,KAAKC,YAAA,KAAUC,OAAA,KAAKC,WAAA,KAASC,OAAA,KAAKC,YAAA,Q,kCC5BhE,4BAIe,cAAIC,OAAO,CACxBC,KAAM,aACNC,WAAY,CACVC,OAAA,QAEFC,MAAO,CACLD,OAAQ,CACNE,KAAM,CAACC,QAASC,QAChBC,SAAS,IAGbC,QAAS,CACP,UAAUC,EAAO,IACf,OAAKjE,KAAK0D,QACVO,EAAKC,YAAc,sCACnBD,EAAKR,WAAaQ,EAAKR,YAAc,GACrCQ,EAAKR,WAAWU,KAAK,CACnBX,KAAM,SACN5C,MAAO,CACLwD,QAAQ,KAGZH,EAAK1D,GAAKuD,OAAOO,OAAO,CACtBlC,MAAOnC,KAAKsE,UACXtE,KAAKuE,YACDvE,KAAKE,eAAe,MAAO+D,IAZT,MAe3B,iB,uBChCJO,EAAOC,QAAU,IAA0B,+B,2DCA3C,IAAI3E,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,QAAQ,CAACE,MAAM,CAAC,MAAQ,GAAG,MAAQ,WAAW,CAACF,EAAG,QAAQ,CAACE,MAAM,CAAC,KAAO,IAAI,CAACF,EAAG,OAAO,CAACJ,EAAIqB,GAAGrB,EAAI6B,GAAG7B,EAAIyD,WAAWrD,EAAG,QAAQ,CAACA,EAAG,eAAe,CAAC+D,YAAY,YAAYhD,YAAY,CAAC,MAAQ,QAAQb,MAAM,CAAC,KAAO,GAAG,eAAe,GAAG,cAAc,GAAG,KAAO,SAAS,KAAON,EAAI2E,MAAM/D,MAAM,CAACC,MAAOb,EAAc,WAAEc,SAAS,SAAUC,GAAMf,EAAI4E,WAAW7D,GAAKC,WAAW,iBAAiB,IAAI,IAAI,IACvfgC,EAAkB,GCctB,GACI,KAAJ,cACI,MAAJ,wBACI,OACI,MAAR,IAEI,SAAJ,CACQ,WAAR,CACY,MACI,OAAhB,YAEY,IAAZ,GACgB,KAAhB,iCC3BmQ,I,qECO/PC,EAAY,eACd,EACAlD,EACAiD,GACA,EACA,KACA,WACA,MAIa,OAAAC,EAAiB,QAOhC,IAAkBA,EAAW,CAACG,OAAA,KAAKE,OAAA,KAAKuB,aAAA,Q,kCCzBxC,4DAUe,cAAWrB,OAAO,CAC/BC,KAAM,aACNG,MAAO,CACLkB,cAAehB,QACfiB,kBAAmB,CACjBlB,KAAMmB,OACNhB,QAAS,0BAEXiB,QAAS,CACPpB,KAAMmB,OACNhB,QAAS,gBAEXkB,OAAQ,CACNrB,KAAMmB,OACNhB,QAAS,gBAIb,OACE,MAAO,CACLmB,mBAAoBlF,KAAK6E,gBAI7BM,SAAU,CACR,UACE,MAAO,IAAK,OAAOC,QAAQD,SAASE,QAAQC,KAAKtF,MAC/C,+BAA+B,EAC/B,qBAAqB,EACrB,yBAA0BA,KAAKkF,qBAInC,eACE,OAAIlF,KAAKkF,mBACAlF,KAAK8E,kBACH9E,KAAKuF,SACPvF,KAAKiF,OAELjF,KAAKgF,SAOhB,kBACE,IAAIhF,KAAKwF,UAAaxF,KAAKkF,mBAC3B,OAAIlF,KAAKyF,UAAYzF,KAAK0F,eAAuB,QAC7C1F,KAAK2F,WAAmB,UACN,OAAlB3F,KAAK4F,SAA0B5F,KAAK6F,mBAAxC,IAKJC,MAAO,CACL,cAAcC,GAEZ/F,KAAKgG,UAAU,IAAMhG,KAAKkF,mBAAqBa,IAGjD,mBAAmBA,GACjB/F,KAAKiG,MAAM,uBAAwBF,IAGrC,WACO/F,KAAK6E,gBACV7E,KAAKkF,oBAAqB,KAI9BlB,QAAS,CACP,cACE,OAAOhE,KAAKE,eAAe,MAAO,CAChCgE,YAAa,sCACZ,CAAClE,KAAKkG,SAAS,WAAY,IAAKlG,KAAKmG,OACtC,eAAgBnG,KAAKkF,mBAAqB,QAAUlF,KAAKuF,SAASa,aAChEpG,KAAKqG,UAAUrG,KAAKsG,aAAatG,KAAKuG,kBAAmBvG,KAAKE,eAAe,OAAOF,KAAKsG,aAAatG,KAAKuG,gBAAiB,CAC9H5C,MAAO,CACL6C,MAAOxG,KAAKwG,MACZC,KAAMzG,KAAKyG,KACXC,MAAO1G,KAAK0G,SAEZ1G,KAAK2G,iBAGX,iBACE,MAAO,CAAC3G,KAAK4G,cAAe5G,KAAK6G,iB,yDCjGvC,oDASe,sBAAO,OAAQ,OAAY,QAAYtD,OAAO,CAC3DC,KAAM,aACN7C,MAAO,CACLmG,KAAM,aACNC,MAAO,UAETpD,MAAO,CACLqD,GAAIjC,OACJkC,WAAY,KACZC,WAAY,KACZC,UAAW,KACXC,SAAU,CACRxD,KAAMC,QACNE,QAAS,MAEXsD,MAAOtC,QAGT,OACE,MAAO,CACLa,SAAU5F,KAAKiH,WACfK,UAAWtH,KAAKiH,aAIpB9B,SAAU,CACR,gBACE,GAAKnF,KAAKuF,SACV,OAAIvF,KAAKyB,MAAczB,KAAKyB,MACxBzB,KAAKuH,SAAWvH,KAAKwH,UAAkB,QACpC,UAGT,aACE,OAAyB,IAAlBxH,KAAKoH,UAAuC,OAAlBpH,KAAKoH,UAAqBK,MAAMC,QAAQ1H,KAAK2H,gBAGhF,WACE,MAAM/G,EAAQZ,KAAKY,MACbgH,EAAQ5H,KAAK2H,cAEnB,OAAI3H,KAAK6H,aACFJ,MAAMC,QAAQE,IACZA,EAAME,KAAKC,GAAQ/H,KAAKgI,gBAAgBD,EAAMnH,SAGhCqH,IAAnBjI,KAAKmH,gBAA+Cc,IAApBjI,KAAKkH,WAChCtG,EAAQZ,KAAKgI,gBAAgBpH,EAAOgH,GAAS/D,QAAQ+D,GAGvD5H,KAAKgI,gBAAgBJ,EAAO5H,KAAKmH,YAG1C,UACE,OAAOnH,KAAKuF,WAIhBO,MAAO,CACL,WAAWC,GACT/F,KAAKsH,UAAYvB,EACjB/F,KAAK4F,SAAWG,IAIpB/B,QAAS,CACP,WACE,MAAMqD,EAAQ,OAAOjC,QAAQpB,QAAQ6C,SAASvB,KAAKtF,MACnD,OAAKqH,GACLA,EAAMpD,KAAK1D,GAAK,CACd4B,MAAO+F,IAILA,EAAEC,iBACFnI,KAAKsE,aAGF+C,GAVYA,GAarB,SAASzD,EAAMvD,GACb,OAAOL,KAAKE,eAAe,QAAS,CAClCG,MAAOyD,OAAOO,OAAO,CACnB,eAAgBrE,KAAKuF,SAASa,WAC9BZ,SAAUxF,KAAKoI,WACfpB,GAAIhH,KAAKqI,WACTC,KAAM1E,EACNA,QACCvD,GACHkI,SAAU,CACR3H,MAAOZ,KAAKY,MACZ4H,QAASxI,KAAKuF,UAEhBhF,GAAI,CACFkI,KAAMzI,KAAK0I,OACXC,OAAQ3I,KAAKsE,SACbsE,MAAO5I,KAAK6I,QACZC,QAAS9I,KAAK+I,WAEhB3G,IAAK,WAIT,SACEpC,KAAKgJ,WAAY,GAGnB,WACE,GAAIhJ,KAAKoI,WAAY,OACrB,MAAMxH,EAAQZ,KAAKY,MACnB,IAAIgH,EAAQ5H,KAAK2H,cAEjB,GAAI3H,KAAK6H,WAAY,CACdJ,MAAMC,QAAQE,KACjBA,EAAQ,IAGV,MAAMqB,EAASrB,EAAMqB,OACrBrB,EAAQA,EAAMsB,OAAOnB,IAAS/H,KAAKgI,gBAAgBD,EAAMnH,IAErDgH,EAAMqB,SAAWA,GACnBrB,EAAMzD,KAAKvD,QAGbgH,OAD4BK,IAAnBjI,KAAKmH,gBAA+Cc,IAApBjI,KAAKkH,WACtClH,KAAKgI,gBAAgBJ,EAAO5H,KAAKmH,WAAanH,KAAKkH,WAAalH,KAAKmH,UACpEvG,EACDZ,KAAKgI,gBAAgBJ,EAAOhH,GAAS,KAAOA,GAE3CgH,EAGX5H,KAAKmJ,UAAS,EAAMvB,GACpB5H,KAAK2H,cAAgBC,EACrB5H,KAAK4F,SAAWgC,GAGlB,UACE5H,KAAKgJ,WAAY,GAInB,UAAUd","file":"js/chunk-7d8e2978.07319db3.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',[_c('CVselect',{attrs:{\"name\":\"Camera\",\"list\":_vm.cameraList},on:{\"input\":function($event){return _vm.handleInput('currentCamera',_vm.currentCameraIndex)}},model:{value:(_vm.currentCameraIndex),callback:function ($$v) {_vm.currentCameraIndex=$$v},expression:\"currentCameraIndex\"}}),_c('CVnumberinput',{attrs:{\"name\":\"Diagonal FOV\"},model:{value:(_vm.cameraSettings.fov),callback:function ($$v) {_vm.$set(_vm.cameraSettings, \"fov\", $$v)},expression:\"cameraSettings.fov\"}}),_c('br'),_c('CVnumberinput',{attrs:{\"name\":\"Camera pitch\",\"step\":0.01},model:{value:(_vm.cameraSettings.tilt),callback:function ($$v) {_vm.$set(_vm.cameraSettings, \"tilt\", $$v)},expression:\"cameraSettings.tilt\"}}),_c('br'),_c('v-btn',{staticStyle:{\"margin-top\":\"10px\"},attrs:{\"small\":\"\",\"color\":\"#4baf62\"},on:{\"click\":_vm.sendCameraSettings}},[_vm._v(\"Save Camera Settings\\n        \")])],1),_c('div',{staticStyle:{\"margin-top\":\"15px\"}},[_c('span',[_vm._v(\"3D Calibration\")]),_c('v-divider',{staticStyle:{\"margin-bottom\":\"10px\"},attrs:{\"color\":\"white\"}}),_c('v-row',[_c('v-col',[_c('CVselect',{attrs:{\"name\":\"Resolution\",\"list\":_vm.stringResolutionList},model:{value:(_vm.resolutionIndex),callback:function ($$v) {_vm.resolutionIndex=$$v},expression:\"resolutionIndex\"}})],1),_c('v-col',[_c('CVnumberinput',{attrs:{\"name\":\"Square Size (in)\"},model:{value:(_vm.squareSize),callback:function ($$v) {_vm.squareSize=$$v},expression:\"squareSize\"}})],1)],1),_c('v-row',[_c('v-col',[_c('v-btn',{attrs:{\"small\":\"\",\"color\":_vm.calibrationModeButton.color,\"disabled\":_vm.checkResolution},on:{\"click\":_vm.sendCalibrationMode}},[_vm._v(\"\\n                    \"+_vm._s(_vm.calibrationModeButton.text)+\"\\n                \")])],1),_c('v-col',[_c('v-btn',{attrs:{\"small\":\"\",\"color\":_vm.cancellationModeButton.color,\"disabled\":_vm.checkCancelation},on:{\"click\":_vm.sendCalibrationFinish}},[_vm._v(\"\\n                    \"+_vm._s(_vm.cancellationModeButton.text)+\"\\n                \")])],1),_c('v-col',[_c('v-btn',{attrs:{\"color\":\"whitesmoke\",\"small\":\"\"},on:{\"click\":function($event){return _vm.$refs.calibrationFile.click()}}},[_vm._v(\"\\n                    Download Checkerboard\\n                \")]),_c('a',{ref:\"calibrationFile\",staticStyle:{\"color\":\"black\",\"text-decoration\":\"none\",\"display\":\"none\"},attrs:{\"href\":require('../../assets/chessboard.png'),\"download\":\"Calibration Board.png\"}})],1)],1),(_vm.isCalibrating)?_c('v-row',[_c('v-col',[_c('span',[_vm._v(\"Snapshot Amount: \"+_vm._s(_vm.snapshotAmount))])])],1):_vm._e(),(_vm.isCalibrating)?_c('div',[_c('v-checkbox',{attrs:{\"label\":\"Advanced Menu\",\"dark\":\"\"},model:{value:(_vm.isAdvanced),callback:function ($$v) {_vm.isAdvanced=$$v},expression:\"isAdvanced\"}}),(_vm.isAdvanced)?_c('div',[_c('CVslider',{attrs:{\"name\":\"Exposure\",\"min\":0,\"max\":100},on:{\"input\":function($event){return _vm.handleData('exposure')}},model:{value:(_vm.pipeline.exposure),callback:function ($$v) {_vm.$set(_vm.pipeline, \"exposure\", $$v)},expression:\"pipeline.exposure\"}}),_c('CVslider',{attrs:{\"name\":\"Brightness\",\"min\":0,\"max\":100},on:{\"input\":function($event){return _vm.handleData('brightness')}},model:{value:(_vm.pipeline.brightness),callback:function ($$v) {_vm.$set(_vm.pipeline, \"brightness\", $$v)},expression:\"pipeline.brightness\"}}),(_vm.pipeline.gain !== -1)?_c('CVslider',{attrs:{\"name\":\"Gain\",\"min\":0,\"max\":100},on:{\"input\":function($event){return _vm.handleData('gain')}},model:{value:(_vm.pipeline.gain),callback:function ($$v) {_vm.$set(_vm.pipeline, \"gain\", $$v)},expression:\"pipeline.gain\"}}):_vm._e(),_c('CVselect',{attrs:{\"name\":\"FPS\",\"list\":_vm.stringFpsList},on:{\"input\":_vm.changeFps},model:{value:(_vm.pipeline.videoModeIndex),callback:function ($$v) {_vm.$set(_vm.pipeline, \"videoModeIndex\", $$v)},expression:\"pipeline.videoModeIndex\"}})],1):_vm._e()],1):_vm._e()],1),_c('v-snackbar',{attrs:{\"top\":\"\",\"color\":_vm.snackbar.color},model:{value:(_vm.snack),callback:function ($$v) {_vm.snack=$$v},expression:\"snack\"}},[_c('span',[_vm._v(_vm._s(_vm.snackbar.text))])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <div>\r\n            <CVselect name=\"Camera\" :list=\"cameraList\" v-model=\"currentCameraIndex\"\r\n                      @input=\"handleInput('currentCamera',currentCameraIndex)\"/>\r\n            <CVnumberinput name=\"Diagonal FOV\" v-model=\"cameraSettings.fov\"/>\r\n            <br>\r\n            <CVnumberinput name=\"Camera pitch\" v-model=\"cameraSettings.tilt\" :step=\"0.01\"/>\r\n            <br>\r\n            <v-btn style=\"margin-top:10px\" small color=\"#4baf62\" @click=\"sendCameraSettings\">Save Camera Settings\r\n            </v-btn>\r\n        </div>\r\n        <div style=\"margin-top: 15px\">\r\n            <span>3D Calibration</span>\r\n            <v-divider color=\"white\" style=\"margin-bottom: 10px\"/>\r\n            <v-row>\r\n                <v-col>\r\n                    <CVselect name=\"Resolution\" v-model=\"resolutionIndex\" :list=\"stringResolutionList\"/>\r\n                </v-col>\r\n                <v-col>\r\n                    <CVnumberinput name=\"Square Size (in)\" v-model=\"squareSize\"/>\r\n                </v-col>\r\n            </v-row>\r\n            <v-row>\r\n                <v-col>\r\n                    <v-btn small :color=\"calibrationModeButton.color\" @click=\"sendCalibrationMode\"\r\n                           :disabled=\"checkResolution\">\r\n                        {{calibrationModeButton.text}}\r\n                    </v-btn>\r\n                </v-col>\r\n                <v-col>\r\n                    <v-btn small :color=\"cancellationModeButton.color\" @click=\"sendCalibrationFinish\"\r\n                           :disabled=\"checkCancelation\">\r\n                        {{cancellationModeButton.text}}\r\n                    </v-btn>\r\n                </v-col>\r\n                <v-col>\r\n                    <v-btn color=\"whitesmoke\" small @click=\"$refs.calibrationFile.click()\">\r\n                        Download Checkerboard\r\n                    </v-btn>\r\n                    <a ref=\"calibrationFile\" style=\"color: black; text-decoration: none; display: none\"\r\n                       :href=\"require('../../assets/chessboard.png')\"\r\n                       download=\"Calibration Board.png\"/>\r\n                </v-col>\r\n            </v-row>\r\n            <v-row v-if=\"isCalibrating\">\r\n                <v-col>\r\n                    <span>Snapshot Amount: {{snapshotAmount}}</span>\r\n                </v-col>\r\n            </v-row>\r\n            <div v-if=\"isCalibrating\">\r\n                <v-checkbox v-model=\"isAdvanced\" label=\"Advanced Menu\" dark/>\r\n                <div v-if=\"isAdvanced\">\r\n                    <CVslider name=\"Exposure\" v-model=\"pipeline.exposure\" :min=\"0\" :max=\"100\"\r\n                              @input=\"handleData('exposure')\"/>\r\n                    <CVslider name=\"Brightness\" v-model=\"pipeline.brightness\" :min=\"0\" :max=\"100\"\r\n                              @input=\"handleData('brightness')\"/>\r\n                    <CVslider name=\"Gain\" v-if=\"pipeline.gain !== -1\" v-model=\"pipeline.gain\" :min=\"0\" :max=\"100\"\r\n                              @input=\"handleData('gain')\"/>\r\n                    <CVselect name=\"FPS\" v-model=\"pipeline.videoModeIndex\" :list=\"stringFpsList\" @input=\"changeFps\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <v-snackbar v-model=\"snack\" top :color=\"snackbar.color\">\r\n            <span>{{snackbar.text}}</span>\r\n        </v-snackbar>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import CVselect from '../../components/cv-select'\r\n    import CVnumberinput from '../../components/cv-number-input'\r\n    import CVslider from '../../components/cv-slider'\r\n\r\n    export default {\r\n        name: 'CameraSettings',\r\n        components: {\r\n            CVselect,\r\n            CVnumberinput,\r\n            CVslider\r\n        },\r\n        data() {\r\n            return {\r\n                isCalibrating: false,\r\n                resolutionIndex: undefined,\r\n                calibrationModeButton: {\r\n                    text: \"Start Calibration\",\r\n                    color: \"green\"\r\n                },\r\n                cancellationModeButton: {\r\n                    text: \"Cancel Calibration\",\r\n                    color: \"red\"\r\n                },\r\n                snackbar: {\r\n                    color: \"success\",\r\n                    text: \"\"\r\n                },\r\n                squareSize: 1.0,\r\n                snapshotAmount: 0,\r\n                hasEnough: false,\r\n                snack: false,\r\n                isAdvanced: false\r\n            }\r\n        },\r\n        methods: {\r\n            handleData(val) {\r\n                this.handleInput(val, this.pipeline[val]);\r\n            },\r\n            changeFps() {\r\n                this.handleInput('videoModeIndex', this.filteredFpsList[this.pipeline['videoModeIndex']]['actualIndex']);\r\n            },\r\n            sendCameraSettings() {\r\n                const self = this;\r\n                this.axios.post(\"http://\" + this.$address + \"/api/settings/camera\", this.cameraSettings).then(\r\n                    function (response) {\r\n                        if (response.status === 200) {\r\n                            self.$store.state.saveBar = true;\r\n                        }\r\n                    }\r\n                )\r\n            },\r\n            sendCalibrationMode() {\r\n                const self = this;\r\n                let data = {};\r\n                let connection_string = \"/api/settings/\";\r\n                if (self.isCalibrating === true) {\r\n                    connection_string += \"snapshot\"\r\n                } else {\r\n                    connection_string += \"startCalibration\";\r\n                    data['resolution'] = this.filteredResolutionList[this.resolutionIndex].actualIndex;\r\n                    data['squareSize'] = this.squareSize;\r\n                    self.hasEnough = false;\r\n                }\r\n                this.axios.post(\"http://\" + this.$address + connection_string, data).then(\r\n                    function (response) {\r\n                        if (response.status === 200) {\r\n                            if (self.isCalibrating) {\r\n                                self.snapshotAmount = response.data['snapshotCount'];\r\n                                self.hasEnough = response.data['hasEnough'];\r\n                                if (self.hasEnough === true) {\r\n                                    self.cancellationModeButton.text = \"Finish Calibration\";\r\n                                    self.cancellationModeButton.color = \"green\";\r\n                                }\r\n                            } else {\r\n                                self.calibrationModeButton.text = \"Take Snapshot\";\r\n                                self.isCalibrating = true;\r\n                            }\r\n                        }\r\n                    }\r\n                );\r\n            },\r\n            sendCalibrationFinish() {\r\n                const self = this;\r\n                let connection_string = \"/api/settings/endCalibration\";\r\n                let data = {};\r\n                data['squareSize'] = this.squareSize;\r\n                self.axios.post(\"http://\" + this.$address + connection_string, data).then((response) => {\r\n                        if (response.status === 200) {\r\n                            self.snackbar = {\r\n                                color: \"success\",\r\n                                text: \"calibration successful. \\n\" +\r\n                                    \"accuracy: \" + response.data['accuracy'].toFixed(5)\r\n                            };\r\n                            self.snack = true;\r\n                        }\r\n                        self.isCalibrating = false;\r\n                        self.hasEnough = false;\r\n                        self.snapshotAmount = 0;\r\n                        self.calibrationModeButton.text = \"Start Calibration\";\r\n                        self.cancellationModeButton.text = \"Cancel Calibration\";\r\n                        self.cancellationModeButton.color = \"red\";\r\n                    }\r\n                ).catch(() => {\r\n                    self.snackbar = {\r\n                        color: \"error\",\r\n                        text: \"calibration failed\"\r\n                    };\r\n                    self.snack = true;\r\n                    self.isCalibrating = false;\r\n                    self.hasEnough = false;\r\n                    self.snapshotAmount = 0;\r\n                    self.calibrationModeButton.text = \"Start Calibration\";\r\n                    self.cancellationModeButton.text = \"Cancel Calibration\";\r\n                    self.cancellationModeButton.color = \"red\";\r\n                });\r\n            }\r\n        },\r\n        computed: {\r\n            checkResolution() {\r\n                return this.resolutionIndex === undefined;\r\n            },\r\n            checkCancelation() {\r\n                if (this.isCalibrating) {\r\n                    return false\r\n                } else if (this.checkResolution) {\r\n                    return true;\r\n                } else {\r\n                    return true\r\n                }\r\n            },\r\n            currentCameraIndex: {\r\n                get() {\r\n                    return this.$store.state.currentCameraIndex;\r\n                },\r\n                set(value) {\r\n                    this.$store.commit('currentCameraIndex', value);\r\n                }\r\n            },\r\n            cameraList: {\r\n                get() {\r\n                    return this.$store.state.cameraList;\r\n                },\r\n                set(value) {\r\n                    this.$store.commit('cameraList', value);\r\n                }\r\n            },\r\n            filteredResolutionList: {\r\n                get() {\r\n                    let tmp_list = [];\r\n                    for (let i in this.$store.state.resolutionList) {\r\n                        let res = JSON.parse(JSON.stringify(this.$store.state.resolutionList[i]));\r\n                        if (!tmp_list.some(e => e.width === res.width && e.height === res.height)) {\r\n                            res['actualIndex'] = parseInt(i);\r\n                            tmp_list.push(res);\r\n                        }\r\n                    }\r\n                    return tmp_list;\r\n                }\r\n            },\r\n            filteredFpsList() {\r\n                let selectedRes = this.$store.state.resolutionList[this.resolutionIndex];\r\n                let tmpList = [];\r\n                for (let i in this.$store.state.resolutionList) {\r\n                    let res = JSON.parse(JSON.stringify(this.$store.state.resolutionList[i]));\r\n                    if (!tmpList.some(e => e['fps'] === res['fps'])) {\r\n                        if (res.width === selectedRes.width && res.height === selectedRes.height) {\r\n                            res['actualIndex'] = parseInt(i);\r\n                            tmpList.push(res);\r\n                        }\r\n                    }\r\n                }\r\n                return tmpList;\r\n            },\r\n            stringFpsList() {\r\n                let tmp = [];\r\n                for (let i of this.filteredFpsList) {\r\n                    tmp.push(i['fps']);\r\n                }\r\n                return tmp;\r\n            },\r\n            stringResolutionList: {\r\n                get() {\r\n                    let tmp = [];\r\n                    for (let i of this.filteredResolutionList) {\r\n                        tmp.push(`${i['width']} X ${i['height']}`)\r\n                    }\r\n                    return tmp\r\n                }\r\n            },\r\n            cameraSettings: {\r\n                get() {\r\n                    return this.$store.state.cameraSettings;\r\n                },\r\n                set(value) {\r\n                    this.$store.commit('cameraSettings', value);\r\n                }\r\n            },\r\n            pipeline() {\r\n                return this.$store.state.pipeline\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"\" scoped>\r\n\r\n</style>","import mod from \"-!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Cameras.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Cameras.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Cameras.vue?vue&type=template&id=49adc682&scoped=true&\"\nimport script from \"./Cameras.vue?vue&type=script&lang=js&\"\nexport * from \"./Cameras.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"49adc682\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCheckbox } from 'vuetify/lib/components/VCheckbox';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSnackbar } from 'vuetify/lib/components/VSnackbar';\ninstallComponents(component, {VBtn,VCheckbox,VCol,VDivider,VRow,VSnackbar})\n","// Directives\nimport ripple from '../../directives/ripple'; // Types\n\nimport Vue from 'vue';\nexport default Vue.extend({\n  name: 'rippleable',\n  directives: {\n    ripple\n  },\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true\n    }\n  },\n  methods: {\n    genRipple(data = {}) {\n      if (!this.ripple) return null;\n      data.staticClass = 'v-input--selection-controls__ripple';\n      data.directives = data.directives || [];\n      data.directives.push({\n        name: 'ripple',\n        value: {\n          center: true\n        }\n      });\n      data.on = Object.assign({\n        click: this.onChange\n      }, this.$listeners);\n      return this.$createElement('div', data);\n    },\n\n    onChange() {}\n\n  }\n});\n//# sourceMappingURL=index.js.map","module.exports = __webpack_public_path__ + \"img/chessboard.f921ac6e.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-row',{attrs:{\"dense\":\"\",\"align\":\"center\"}},[_c('v-col',{attrs:{\"cols\":2}},[_c('span',[_vm._v(_vm._s(_vm.name))])]),_c('v-col',[_c('v-text-field',{staticClass:\"mt-0 pt-0\",staticStyle:{\"width\":\"70px\"},attrs:{\"dark\":\"\",\"hide-details\":\"\",\"single-line\":\"\",\"type\":\"number\",\"step\":_vm.step},model:{value:(_vm.localValue),callback:function ($$v) {_vm.localValue=$$v},expression:\"localValue\"}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <v-row dense align=\"center\">\r\n            <v-col :cols=\"2\">\r\n                <span>{{name}}</span>\r\n            </v-col>\r\n            <v-col>\r\n                <v-text-field dark v-model=\"localValue\" class=\"mt-0 pt-0\" hide-details single-line type=\"number\"\r\n                              style=\"width: 70px\" :step=\"step\"/>\r\n            </v-col>\r\n        </v-row>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'NumberInput',\r\n        props: ['name', 'value', 'step'],\r\n        data() {\r\n            return {}\r\n        },\r\n        computed: {\r\n            localValue: {\r\n                get() {\r\n                    return this.value;\r\n                },\r\n                set(value) {\r\n                    this.$emit('input', parseFloat(value));\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"\" scoped>\r\n\r\n</style>","import mod from \"-!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cv-number-input.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cv-number-input.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./cv-number-input.vue?vue&type=template&id=7cb31fe1&scoped=true&\"\nimport script from \"./cv-number-input.vue?vue&type=script&lang=js&\"\nexport * from \"./cv-number-input.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7cb31fe1\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\ninstallComponents(component, {VCol,VRow,VTextField})\n","// Styles\nimport \"../../../src/components/VCheckbox/VCheckbox.sass\";\nimport \"../../../src/styles/components/_selection-controls.sass\"; // Components\n\nimport VIcon from '../VIcon';\nimport VInput from '../VInput'; // Mixins\n\nimport Selectable from '../../mixins/selectable';\n/* @vue/component */\n\nexport default Selectable.extend({\n  name: 'v-checkbox',\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate'\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff'\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn'\n    }\n  },\n\n  data() {\n    return {\n      inputIndeterminate: this.indeterminate\n    };\n  },\n\n  computed: {\n    classes() {\n      return { ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls': true,\n        'v-input--checkbox': true,\n        'v-input--indeterminate': this.inputIndeterminate\n      };\n    },\n\n    computedIcon() {\n      if (this.inputIndeterminate) {\n        return this.indeterminateIcon;\n      } else if (this.isActive) {\n        return this.onIcon;\n      } else {\n        return this.offIcon;\n      }\n    },\n\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState() {\n      if (this.disabled && !this.inputIndeterminate) return undefined;\n      if (this.hasError && this.shouldValidate) return 'error';\n      if (this.hasSuccess) return 'success';\n      if (this.hasColor !== null) return this.computedColor;\n      return undefined;\n    }\n\n  },\n  watch: {\n    indeterminate(val) {\n      // https://github.com/vuetifyjs/vuetify/issues/8270\n      this.$nextTick(() => this.inputIndeterminate = val);\n    },\n\n    inputIndeterminate(val) {\n      this.$emit('update:indeterminate', val);\n    },\n\n    isActive() {\n      if (!this.indeterminate) return;\n      this.inputIndeterminate = false;\n    }\n\n  },\n  methods: {\n    genCheckbox() {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input'\n      }, [this.genInput('checkbox', { ...this.attrs$,\n        'aria-checked': this.inputIndeterminate ? 'mixed' : this.isActive.toString()\n      }), this.genRipple(this.setTextColor(this.validationState)), this.$createElement(VIcon, this.setTextColor(this.validationState, {\n        props: {\n          dense: this.dense,\n          dark: this.dark,\n          light: this.light\n        }\n      }), this.computedIcon)]);\n    },\n\n    genDefaultSlot() {\n      return [this.genCheckbox(), this.genLabel()];\n    }\n\n  }\n});\n//# sourceMappingURL=VCheckbox.js.map","// Components\nimport VInput from '../../components/VInput'; // Mixins\n\nimport Rippleable from '../rippleable';\nimport Comparable from '../comparable'; // Utilities\n\nimport mixins from '../../util/mixins';\n/* @vue/component */\n\nexport default mixins(VInput, Rippleable, Comparable).extend({\n  name: 'selectable',\n  model: {\n    prop: 'inputValue',\n    event: 'change'\n  },\n  props: {\n    id: String,\n    inputValue: null,\n    falseValue: null,\n    trueValue: null,\n    multiple: {\n      type: Boolean,\n      default: null\n    },\n    label: String\n  },\n\n  data() {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue\n    };\n  },\n\n  computed: {\n    computedColor() {\n      if (!this.isActive) return undefined;\n      if (this.color) return this.color;\n      if (this.isDark && !this.appIsDark) return 'white';\n      return 'accent';\n    },\n\n    isMultiple() {\n      return this.multiple === true || this.multiple === null && Array.isArray(this.internalValue);\n    },\n\n    isActive() {\n      const value = this.value;\n      const input = this.internalValue;\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false;\n        return input.some(item => this.valueComparator(item, value));\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value ? this.valueComparator(value, input) : Boolean(input);\n      }\n\n      return this.valueComparator(input, this.trueValue);\n    },\n\n    isDirty() {\n      return this.isActive;\n    }\n\n  },\n  watch: {\n    inputValue(val) {\n      this.lazyValue = val;\n      this.hasColor = val;\n    }\n\n  },\n  methods: {\n    genLabel() {\n      const label = VInput.options.methods.genLabel.call(this);\n      if (!label) return label;\n      label.data.on = {\n        click: e => {\n          // Prevent label from\n          // causing the input\n          // to focus\n          e.preventDefault();\n          this.onChange();\n        }\n      };\n      return label;\n    },\n\n    genInput(type, attrs) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown\n        },\n        ref: 'input'\n      });\n    },\n\n    onBlur() {\n      this.isFocused = false;\n    },\n\n    onChange() {\n      if (this.isDisabled) return;\n      const value = this.value;\n      let input = this.internalValue;\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = [];\n        }\n\n        const length = input.length;\n        input = input.filter(item => !this.valueComparator(item, value));\n\n        if (input.length === length) {\n          input.push(value);\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue;\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value;\n      } else {\n        input = !input;\n      }\n\n      this.validate(true, input);\n      this.internalValue = input;\n      this.hasColor = input;\n    },\n\n    onFocus() {\n      this.isFocused = true;\n    },\n\n    /** @abstract */\n    onKeydown(e) {}\n\n  }\n});\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}